{
  "Type": "Article",
  "Name": "Iterators",
  "Information": "An iterator is any object that, pointing to some element in a range of elements (such as an array or a container), has the ability to iterate through the elements of that range using a set of operators (with at least the increment (++) and dereference (*) operators).\n\nThe most obvious form of iterator is a pointer: A pointer can point to elements in an array, and can iterate through them using the increment operator (++). But other kinds of iterators are possible. For example, each container type (such as a list) has a specific iterator type designed to iterate through its elements.\n\nNotice that while a pointer is a form of iterator, not all iterators have the same functionality of pointers; Depending on the properties supported by iterators, they are classified into five different categories:\n\nIterator categories\nIterators are classified into five categories depending on the functionality they implement:\n\nInput\nOutput\nForward\nBidirectional\nRandom Access\n\nInput and output iterators are the most limited types of iterators: they can perform sequential single-pass input or output operations.",
  "Difficulty": 2,
  "RelatedThemes": [
    "theme_containers"
  ],
  "Links": [
    "https://www.geeksforgeeks.org/iterators-c-stl/",
    "https://en.cppreference.com/w/cpp/iterator/iterator"
  ],
  "Theme": [
    {
      "Name": "theme_containers",
      "Weight": 1.0
    }
  ],
  "DirectTasks": [
  ]
}
